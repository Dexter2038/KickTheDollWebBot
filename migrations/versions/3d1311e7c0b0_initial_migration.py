"""initial migration

Revision ID: 3d1311e7c0b0
Revises:
Create Date: 2025-08-08 12:19:24.628489

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3d1311e7c0b0"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("telegram_id", sa.BIGINT(), nullable=False),
        sa.Column("username", sa.String(length=30), nullable=False),
        sa.Column("wallet_address", sa.String(length=128), nullable=False),
        sa.Column("admin", sa.Boolean(), nullable=True),
        sa.Column("money_balance", sa.Float(), nullable=False),
        sa.Column("last_visit_to_bot", sa.DateTime(), nullable=True),
        sa.Column("bonuses_to_bot", sa.Integer(), nullable=True),
        sa.Column("total_transactions", sa.Float(), nullable=False),
        sa.Column("joined_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "bets",
        sa.Column("bet_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("way", sa.Integer(), nullable=False),
        sa.Column("coin", sa.String(), nullable=False),
        sa.Column("start_value", sa.Float(), nullable=False),
        sa.Column("supposed_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("bet_id"),
    )
    op.create_table(
        "finished_games",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("game_type", sa.Integer(), nullable=False),
        sa.Column("first_user_id", sa.BIGINT(), nullable=False),
        sa.Column("second_user_id", sa.BIGINT(), nullable=True),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("game_hash", sa.String(), nullable=False),
        sa.Column("resolved_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["first_user_id"],
            ["users.telegram_id"],
        ),
        sa.ForeignKeyConstraint(
            ["second_user_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("game_id"),
    )
    op.create_table(
        "lottery_transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("telegram_id", sa.BIGINT(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("multiplier", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["telegram_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "referrals",
        sa.Column("referral_id", sa.Integer(), nullable=False),
        sa.Column("referrer_id", sa.BIGINT(), nullable=False),
        sa.Column("referred_id", sa.BIGINT(), nullable=False),
        sa.Column("bonus", sa.Float(), nullable=False),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["referred_id"],
            ["users.telegram_id"],
        ),
        sa.ForeignKeyConstraint(
            ["referrer_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("referral_id"),
    )
    op.create_table(
        "transactions",
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("telegram_id", sa.BIGINT(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("transaction_hash", sa.String(), nullable=False),
        sa.Column("transaction_type", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["telegram_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("transaction_id"),
    )
    op.create_table(
        "wallets",
        sa.Column("wallet_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("blockchain", sa.String(length=16), nullable=False),
        sa.Column("address", sa.String(length=128), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("wallet_id"),
        sa.UniqueConstraint("address"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("wallets")
    op.drop_table("transactions")
    op.drop_table("referrals")
    op.drop_table("lottery_transactions")
    op.drop_table("finished_games")
    op.drop_table("bets")
    op.drop_table("users")
    # ### end Alembic commands ###
